// Service definition of Tkrzw-RPC
//
// Copyright 2020 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
// except in compliance with the License.  You may obtain a copy of the License at
//     https://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software distributed under the
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied.  See the License for the specific language governing permissions
// and limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: tkrzw_rpc.proto

package tkrzw_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumeration for operations.
type IterateRequest_OpType int32

const (
	// No operation.
	IterateRequest_OP_NONE IterateRequest_OpType = 0
	// Jumps to the first record.
	IterateRequest_OP_FIRST IterateRequest_OpType = 1
	// Jumps to the last record.
	IterateRequest_OP_LAST IterateRequest_OpType = 2
	// Jumps to a record of the key.
	IterateRequest_OP_JUMP IterateRequest_OpType = 3
	// Jumps to the last record lower than the key.
	IterateRequest_OP_JUMP_LOWER IterateRequest_OpType = 4
	// Jumps to the last record upper than the key.
	IterateRequest_OP_JUMP_UPPER IterateRequest_OpType = 5
	// Moves to the next record.
	IterateRequest_OP_NEXT IterateRequest_OpType = 6
	// Moves to the previous record.
	IterateRequest_OP_PREVIOUS IterateRequest_OpType = 7
	// Gets the current record.
	IterateRequest_OP_GET IterateRequest_OpType = 8
	// Sets the current record value.
	IterateRequest_OP_SET IterateRequest_OpType = 9
	// Removes the current record.
	IterateRequest_OP_REMOVE IterateRequest_OpType = 10
)

// Enum value maps for IterateRequest_OpType.
var (
	IterateRequest_OpType_name = map[int32]string{
		0:  "OP_NONE",
		1:  "OP_FIRST",
		2:  "OP_LAST",
		3:  "OP_JUMP",
		4:  "OP_JUMP_LOWER",
		5:  "OP_JUMP_UPPER",
		6:  "OP_NEXT",
		7:  "OP_PREVIOUS",
		8:  "OP_GET",
		9:  "OP_SET",
		10: "OP_REMOVE",
	}
	IterateRequest_OpType_value = map[string]int32{
		"OP_NONE":       0,
		"OP_FIRST":      1,
		"OP_LAST":       2,
		"OP_JUMP":       3,
		"OP_JUMP_LOWER": 4,
		"OP_JUMP_UPPER": 5,
		"OP_NEXT":       6,
		"OP_PREVIOUS":   7,
		"OP_GET":        8,
		"OP_SET":        9,
		"OP_REMOVE":     10,
	}
)

func (x IterateRequest_OpType) Enum() *IterateRequest_OpType {
	p := new(IterateRequest_OpType)
	*p = x
	return p
}

func (x IterateRequest_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IterateRequest_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkrzw_rpc_proto_enumTypes[0].Descriptor()
}

func (IterateRequest_OpType) Type() protoreflect.EnumType {
	return &file_tkrzw_rpc_proto_enumTypes[0]
}

func (x IterateRequest_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IterateRequest_OpType.Descriptor instead.
func (IterateRequest_OpType) EnumDescriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{46, 0}
}

// Enumeration for operations.
type ReplicateResponse_OpType int32

const (
	// No operation.
	ReplicateResponse_OP_NOOP ReplicateResponse_OpType = 0
	// To modify or add a record.
	ReplicateResponse_OP_SET ReplicateResponse_OpType = 1
	// To remove a record.
	ReplicateResponse_OP_REMOVE ReplicateResponse_OpType = 2
	// To remove all records.
	ReplicateResponse_OP_CLEAR ReplicateResponse_OpType = 3
)

// Enum value maps for ReplicateResponse_OpType.
var (
	ReplicateResponse_OpType_name = map[int32]string{
		0: "OP_NOOP",
		1: "OP_SET",
		2: "OP_REMOVE",
		3: "OP_CLEAR",
	}
	ReplicateResponse_OpType_value = map[string]int32{
		"OP_NOOP":   0,
		"OP_SET":    1,
		"OP_REMOVE": 2,
		"OP_CLEAR":  3,
	}
)

func (x ReplicateResponse_OpType) Enum() *ReplicateResponse_OpType {
	p := new(ReplicateResponse_OpType)
	*p = x
	return p
}

func (x ReplicateResponse_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicateResponse_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkrzw_rpc_proto_enumTypes[1].Descriptor()
}

func (ReplicateResponse_OpType) Type() protoreflect.EnumType {
	return &file_tkrzw_rpc_proto_enumTypes[1]
}

func (x ReplicateResponse_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicateResponse_OpType.Descriptor instead.
func (ReplicateResponse_OpType) EnumDescriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{49, 0}
}

// Status data corresponding to the Status class.
type StatusProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The message code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// The additional status message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusProto) Reset() {
	*x = StatusProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusProto) ProtoMessage() {}

func (x *StatusProto) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusProto.ProtoReflect.Descriptor instead.
func (*StatusProto) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *StatusProto) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatusProto) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Generic key-value pair of strings.
type StringPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The first value, aka. record key.
	First string `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	// The second value aka. record value.
	Second string `protobuf:"bytes,2,opt,name=second,proto3" json:"second,omitempty"`
}

func (x *StringPair) Reset() {
	*x = StringPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringPair) ProtoMessage() {}

func (x *StringPair) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringPair.ProtoReflect.Descriptor instead.
func (*StringPair) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *StringPair) GetFirst() string {
	if x != nil {
		return x.First
	}
	return ""
}

func (x *StringPair) GetSecond() string {
	if x != nil {
		return x.Second
	}
	return ""
}

// Generic key-value pair of byte arrays.
type BytesPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The first value, aka. record key.
	First []byte `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	// The second value aka. record value.
	Second []byte `protobuf:"bytes,2,opt,name=second,proto3" json:"second,omitempty"`
}

func (x *BytesPair) Reset() {
	*x = BytesPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesPair) ProtoMessage() {}

func (x *BytesPair) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesPair.ProtoReflect.Descriptor instead.
func (*BytesPair) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *BytesPair) GetFirst() []byte {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *BytesPair) GetSecond() []byte {
	if x != nil {
		return x.Second
	}
	return nil
}

// Record existence and value.
type RecordState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the record exists.
	Existence bool `protobuf:"varint,1,opt,name=existence,proto3" json:"existence,omitempty"`
	// The key.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The value.
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RecordState) Reset() {
	*x = RecordState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordState) ProtoMessage() {}

func (x *RecordState) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordState.ProtoReflect.Descriptor instead.
func (*RecordState) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *RecordState) GetExistence() bool {
	if x != nil {
		return x.Existence
	}
	return false
}

func (x *RecordState) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RecordState) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request of the Echo method.
type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *EchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Response of the Echo method.
type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The echo message.
	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *EchoResponse) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

// Request of the Inspect method.
type InspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	// If it is negative, metadata of the server is retrieved.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
}

func (x *InspectRequest) Reset() {
	*x = InspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectRequest) ProtoMessage() {}

func (x *InspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectRequest.ProtoReflect.Descriptor instead.
func (*InspectRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *InspectRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

// Response of the Inspect method.
type InspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key-value pairs of the attributes.
	Records []*StringPair `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *InspectResponse) Reset() {
	*x = InspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectResponse) ProtoMessage() {}

func (x *InspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectResponse.ProtoReflect.Descriptor instead.
func (*InspectResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *InspectResponse) GetRecords() []*StringPair {
	if x != nil {
		return x.Records
	}
	return nil
}

// Request of the Get method.
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Whether to omit the value in the response.
	OmitValue bool `protobuf:"varint,3,opt,name=omit_value,json=omitValue,proto3" json:"omit_value,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetRequest) GetOmitValue() bool {
	if x != nil {
		return x.OmitValue
	}
	return false
}

// Response of the Get method.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The value of the record.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request of the GetMulti method.
type GetMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The keys of records.
	Keys [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetMultiRequest) Reset() {
	*x = GetMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiRequest) ProtoMessage() {}

func (x *GetMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiRequest.ProtoReflect.Descriptor instead.
func (*GetMultiRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *GetMultiRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *GetMultiRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Response of the GetMulti method.
type GetMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Retrieved records.
	Records []*BytesPair `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetMultiResponse) Reset() {
	*x = GetMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiResponse) ProtoMessage() {}

func (x *GetMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiResponse.ProtoReflect.Descriptor instead.
func (*GetMultiResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *GetMultiResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetMultiResponse) GetRecords() []*BytesPair {
	if x != nil {
		return x.Records
	}
	return nil
}

// Request of the Set method.
type SetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the record.
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// True to overwrite the existing record.
	Overwrite bool `protobuf:"varint,4,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *SetRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *SetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetRequest) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

// Response of the Set method.
type SetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetResponse) Reset() {
	*x = SetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResponse) ProtoMessage() {}

func (x *SetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResponse.ProtoReflect.Descriptor instead.
func (*SetResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *SetResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the SetMulti method.
type SetMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// Records to store.
	Records []*BytesPair `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	// True to overwrite the existing record.
	Overwrite bool `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
}

func (x *SetMultiRequest) Reset() {
	*x = SetMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMultiRequest) ProtoMessage() {}

func (x *SetMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMultiRequest.ProtoReflect.Descriptor instead.
func (*SetMultiRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *SetMultiRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *SetMultiRequest) GetRecords() []*BytesPair {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *SetMultiRequest) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

// Response of the SetMulti method.
type SetMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetMultiResponse) Reset() {
	*x = SetMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMultiResponse) ProtoMessage() {}

func (x *SetMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMultiResponse.ProtoReflect.Descriptor instead.
func (*SetMultiResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *SetMultiResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Remove method.
type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *RemoveRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// Response of the Remove method.
type RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the RemoveMulti method.
type RemoveMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The keys of records.
	Keys [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *RemoveMultiRequest) Reset() {
	*x = RemoveMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMultiRequest) ProtoMessage() {}

func (x *RemoveMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMultiRequest.ProtoReflect.Descriptor instead.
func (*RemoveMultiRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveMultiRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *RemoveMultiRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Response of the RemoveMulti method.
type RemoveMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveMultiResponse) Reset() {
	*x = RemoveMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMultiResponse) ProtoMessage() {}

func (x *RemoveMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMultiResponse.ProtoReflect.Descriptor instead.
func (*RemoveMultiResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveMultiResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Append method.
type AppendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the record.
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// The delimiter to put after the existing record.
	Delim []byte `protobuf:"bytes,4,opt,name=delim,proto3" json:"delim,omitempty"`
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *AppendRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *AppendRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AppendRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AppendRequest) GetDelim() []byte {
	if x != nil {
		return x.Delim
	}
	return nil
}

// Response of the Append method.
type AppendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *AppendResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the AppendMulti method.
type AppendMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// Records to store.
	Records []*BytesPair `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	// The delimiter to put after the existing record.
	Delim []byte `protobuf:"bytes,3,opt,name=delim,proto3" json:"delim,omitempty"`
}

func (x *AppendMultiRequest) Reset() {
	*x = AppendMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMultiRequest) ProtoMessage() {}

func (x *AppendMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMultiRequest.ProtoReflect.Descriptor instead.
func (*AppendMultiRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *AppendMultiRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *AppendMultiRequest) GetRecords() []*BytesPair {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *AppendMultiRequest) GetDelim() []byte {
	if x != nil {
		return x.Delim
	}
	return nil
}

// Response of the AppendMulti method.
type AppendMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AppendMultiResponse) Reset() {
	*x = AppendMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMultiResponse) ProtoMessage() {}

func (x *AppendMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMultiResponse.ProtoReflect.Descriptor instead.
func (*AppendMultiResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *AppendMultiResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the CompareExchange method.
type CompareExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Whether the record is expected to exist.
	ExpectedExistence bool `protobuf:"varint,3,opt,name=expected_existence,json=expectedExistence,proto3" json:"expected_existence,omitempty"`
	// The expected value.
	ExpectedValue []byte `protobuf:"bytes,4,opt,name=expected_value,json=expectedValue,proto3" json:"expected_value,omitempty"`
	// Whether the record is desired to exists.
	DesiredExistence bool `protobuf:"varint,5,opt,name=desired_existence,json=desiredExistence,proto3" json:"desired_existence,omitempty"`
	// The desired value.
	DesiredValue []byte `protobuf:"bytes,6,opt,name=desired_value,json=desiredValue,proto3" json:"desired_value,omitempty"`
}

func (x *CompareExchangeRequest) Reset() {
	*x = CompareExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareExchangeRequest) ProtoMessage() {}

func (x *CompareExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareExchangeRequest.ProtoReflect.Descriptor instead.
func (*CompareExchangeRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *CompareExchangeRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *CompareExchangeRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CompareExchangeRequest) GetExpectedExistence() bool {
	if x != nil {
		return x.ExpectedExistence
	}
	return false
}

func (x *CompareExchangeRequest) GetExpectedValue() []byte {
	if x != nil {
		return x.ExpectedValue
	}
	return nil
}

func (x *CompareExchangeRequest) GetDesiredExistence() bool {
	if x != nil {
		return x.DesiredExistence
	}
	return false
}

func (x *CompareExchangeRequest) GetDesiredValue() []byte {
	if x != nil {
		return x.DesiredValue
	}
	return nil
}

// Response of the CompareExchange method.
type CompareExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CompareExchangeResponse) Reset() {
	*x = CompareExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareExchangeResponse) ProtoMessage() {}

func (x *CompareExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareExchangeResponse.ProtoReflect.Descriptor instead.
func (*CompareExchangeResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *CompareExchangeResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Increment method.
type IncrementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The incremental value.
	Increment int64 `protobuf:"varint,3,opt,name=increment,proto3" json:"increment,omitempty"`
	// The initial value.
	Initial int64 `protobuf:"varint,4,opt,name=initial,proto3" json:"initial,omitempty"`
}

func (x *IncrementRequest) Reset() {
	*x = IncrementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementRequest) ProtoMessage() {}

func (x *IncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementRequest.ProtoReflect.Descriptor instead.
func (*IncrementRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *IncrementRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *IncrementRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IncrementRequest) GetIncrement() int64 {
	if x != nil {
		return x.Increment
	}
	return 0
}

func (x *IncrementRequest) GetInitial() int64 {
	if x != nil {
		return x.Initial
	}
	return 0
}

// Response of the Increment method.
type IncrementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The current value.
	Current int64 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *IncrementResponse) Reset() {
	*x = IncrementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementResponse) ProtoMessage() {}

func (x *IncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementResponse.ProtoReflect.Descriptor instead.
func (*IncrementResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *IncrementResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *IncrementResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

// Request of the CompareExchangeMulti method.
type CompareExchangeMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// Expected record states.
	Expected []*RecordState `protobuf:"bytes,2,rep,name=expected,proto3" json:"expected,omitempty"`
	// Desired record states.
	Desired []*RecordState `protobuf:"bytes,3,rep,name=desired,proto3" json:"desired,omitempty"`
}

func (x *CompareExchangeMultiRequest) Reset() {
	*x = CompareExchangeMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareExchangeMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareExchangeMultiRequest) ProtoMessage() {}

func (x *CompareExchangeMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareExchangeMultiRequest.ProtoReflect.Descriptor instead.
func (*CompareExchangeMultiRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *CompareExchangeMultiRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *CompareExchangeMultiRequest) GetExpected() []*RecordState {
	if x != nil {
		return x.Expected
	}
	return nil
}

func (x *CompareExchangeMultiRequest) GetDesired() []*RecordState {
	if x != nil {
		return x.Desired
	}
	return nil
}

// Response of the CompareExchangeMulti method.
type CompareExchangeMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CompareExchangeMultiResponse) Reset() {
	*x = CompareExchangeMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareExchangeMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareExchangeMultiResponse) ProtoMessage() {}

func (x *CompareExchangeMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareExchangeMultiResponse.ProtoReflect.Descriptor instead.
func (*CompareExchangeMultiResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *CompareExchangeMultiResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Count method.
type CountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *CountRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

// Response of the Count method.
type CountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The number of records.
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *CountResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request of the GetFileSize method.
type GetFileSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
}

func (x *GetFileSizeRequest) Reset() {
	*x = GetFileSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileSizeRequest) ProtoMessage() {}

func (x *GetFileSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileSizeRequest.ProtoReflect.Descriptor instead.
func (*GetFileSizeRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetFileSizeRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

// Response of the GetFileSize method.
type GetFileSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The current file size.
	FileSize int64 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
}

func (x *GetFileSizeResponse) Reset() {
	*x = GetFileSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileSizeResponse) ProtoMessage() {}

func (x *GetFileSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileSizeResponse.ProtoReflect.Descriptor instead.
func (*GetFileSizeResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *GetFileSizeResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetFileSizeResponse) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

// Request of the Clear method.
type ClearRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
}

func (x *ClearRequest) Reset() {
	*x = ClearRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRequest) ProtoMessage() {}

func (x *ClearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRequest.ProtoReflect.Descriptor instead.
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *ClearRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

// Response of the Clear method.
type ClearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ClearResponse) Reset() {
	*x = ClearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearResponse) ProtoMessage() {}

func (x *ClearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearResponse.ProtoReflect.Descriptor instead.
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *ClearResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Rebuild method.
type RebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// Optional parameters.
	Params []*StringPair `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *RebuildRequest) Reset() {
	*x = RebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildRequest) ProtoMessage() {}

func (x *RebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildRequest.ProtoReflect.Descriptor instead.
func (*RebuildRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *RebuildRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *RebuildRequest) GetParams() []*StringPair {
	if x != nil {
		return x.Params
	}
	return nil
}

// Response of the Rebuild method.
type RebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RebuildResponse) Reset() {
	*x = RebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildResponse) ProtoMessage() {}

func (x *RebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildResponse.ProtoReflect.Descriptor instead.
func (*RebuildResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *RebuildResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the ShouldBeRebuilt method.
type ShouldBeRebuiltRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
}

func (x *ShouldBeRebuiltRequest) Reset() {
	*x = ShouldBeRebuiltRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShouldBeRebuiltRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShouldBeRebuiltRequest) ProtoMessage() {}

func (x *ShouldBeRebuiltRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShouldBeRebuiltRequest.ProtoReflect.Descriptor instead.
func (*ShouldBeRebuiltRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *ShouldBeRebuiltRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

// Response of the ShouldBeRebuilt method.
type ShouldBeRebuiltResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Whether to be rebuilt.
	Tobe bool `protobuf:"varint,2,opt,name=tobe,proto3" json:"tobe,omitempty"`
}

func (x *ShouldBeRebuiltResponse) Reset() {
	*x = ShouldBeRebuiltResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShouldBeRebuiltResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShouldBeRebuiltResponse) ProtoMessage() {}

func (x *ShouldBeRebuiltResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShouldBeRebuiltResponse.ProtoReflect.Descriptor instead.
func (*ShouldBeRebuiltResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *ShouldBeRebuiltResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ShouldBeRebuiltResponse) GetTobe() bool {
	if x != nil {
		return x.Tobe
	}
	return false
}

// Request of the Synchronize method.
type SynchronizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// Whether to do physical synchronization.
	Hard bool `protobuf:"varint,2,opt,name=hard,proto3" json:"hard,omitempty"`
	// Optional parameters.
	Params []*StringPair `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *SynchronizeRequest) Reset() {
	*x = SynchronizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeRequest) ProtoMessage() {}

func (x *SynchronizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeRequest.ProtoReflect.Descriptor instead.
func (*SynchronizeRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *SynchronizeRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *SynchronizeRequest) GetHard() bool {
	if x != nil {
		return x.Hard
	}
	return false
}

func (x *SynchronizeRequest) GetParams() []*StringPair {
	if x != nil {
		return x.Params
	}
	return nil
}

// Response of the Synchronize method.
type SynchronizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SynchronizeResponse) Reset() {
	*x = SynchronizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeResponse) ProtoMessage() {}

func (x *SynchronizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeResponse.ProtoReflect.Descriptor instead.
func (*SynchronizeResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *SynchronizeResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

// Request of the Search method.
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The search mode.
	Mode string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	// The pattern for matching.
	Pattern []byte `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// The maximum records to obtain.
	Capacity int32 `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *SearchRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *SearchRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *SearchRequest) GetPattern() []byte {
	if x != nil {
		return x.Pattern
	}
	return nil
}

func (x *SearchRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

// Response of the Search method.
type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// A list of matched keys.
	Matched [][]byte `protobuf:"bytes,2,rep,name=matched,proto3" json:"matched,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *SearchResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SearchResponse) GetMatched() [][]byte {
	if x != nil {
		return x.Matched
	}
	return nil
}

// Request of the Stream method.
type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For each stream operation.
	//
	// Types that are assignable to RequestOneof:
	//	*StreamRequest_EchoRequest
	//	*StreamRequest_GetRequest
	//	*StreamRequest_SetRequest
	//	*StreamRequest_RemoveRequest
	//	*StreamRequest_AppendRequest
	//	*StreamRequest_CompareExchangeRequest
	//	*StreamRequest_IncrementRequest
	RequestOneof isStreamRequest_RequestOneof `protobuf_oneof:"request_oneof"`
	// If true, the response is omitted.
	OmitResponse bool `protobuf:"varint,101,opt,name=omit_response,json=omitResponse,proto3" json:"omit_response,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{44}
}

func (m *StreamRequest) GetRequestOneof() isStreamRequest_RequestOneof {
	if m != nil {
		return m.RequestOneof
	}
	return nil
}

func (x *StreamRequest) GetEchoRequest() *EchoRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_EchoRequest); ok {
		return x.EchoRequest
	}
	return nil
}

func (x *StreamRequest) GetGetRequest() *GetRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_GetRequest); ok {
		return x.GetRequest
	}
	return nil
}

func (x *StreamRequest) GetSetRequest() *SetRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_SetRequest); ok {
		return x.SetRequest
	}
	return nil
}

func (x *StreamRequest) GetRemoveRequest() *RemoveRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_RemoveRequest); ok {
		return x.RemoveRequest
	}
	return nil
}

func (x *StreamRequest) GetAppendRequest() *AppendRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_AppendRequest); ok {
		return x.AppendRequest
	}
	return nil
}

func (x *StreamRequest) GetCompareExchangeRequest() *CompareExchangeRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_CompareExchangeRequest); ok {
		return x.CompareExchangeRequest
	}
	return nil
}

func (x *StreamRequest) GetIncrementRequest() *IncrementRequest {
	if x, ok := x.GetRequestOneof().(*StreamRequest_IncrementRequest); ok {
		return x.IncrementRequest
	}
	return nil
}

func (x *StreamRequest) GetOmitResponse() bool {
	if x != nil {
		return x.OmitResponse
	}
	return false
}

type isStreamRequest_RequestOneof interface {
	isStreamRequest_RequestOneof()
}

type StreamRequest_EchoRequest struct {
	EchoRequest *EchoRequest `protobuf:"bytes,1,opt,name=echo_request,json=echoRequest,proto3,oneof"`
}

type StreamRequest_GetRequest struct {
	GetRequest *GetRequest `protobuf:"bytes,2,opt,name=get_request,json=getRequest,proto3,oneof"`
}

type StreamRequest_SetRequest struct {
	SetRequest *SetRequest `protobuf:"bytes,3,opt,name=set_request,json=setRequest,proto3,oneof"`
}

type StreamRequest_RemoveRequest struct {
	RemoveRequest *RemoveRequest `protobuf:"bytes,4,opt,name=remove_request,json=removeRequest,proto3,oneof"`
}

type StreamRequest_AppendRequest struct {
	AppendRequest *AppendRequest `protobuf:"bytes,5,opt,name=append_request,json=appendRequest,proto3,oneof"`
}

type StreamRequest_CompareExchangeRequest struct {
	CompareExchangeRequest *CompareExchangeRequest `protobuf:"bytes,6,opt,name=compare_exchange_request,json=compareExchangeRequest,proto3,oneof"`
}

type StreamRequest_IncrementRequest struct {
	IncrementRequest *IncrementRequest `protobuf:"bytes,7,opt,name=increment_request,json=incrementRequest,proto3,oneof"`
}

func (*StreamRequest_EchoRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_GetRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_SetRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_RemoveRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_AppendRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_CompareExchangeRequest) isStreamRequest_RequestOneof() {}

func (*StreamRequest_IncrementRequest) isStreamRequest_RequestOneof() {}

// Response of the Stream method.
type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResponseOneof:
	//	*StreamResponse_EchoResponse
	//	*StreamResponse_GetResponse
	//	*StreamResponse_SetResponse
	//	*StreamResponse_RemoveResponse
	//	*StreamResponse_AppendResponse
	//	*StreamResponse_CompareExchangeResponse
	//	*StreamResponse_IncrementResponse
	ResponseOneof isStreamResponse_ResponseOneof `protobuf_oneof:"response_oneof"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{45}
}

func (m *StreamResponse) GetResponseOneof() isStreamResponse_ResponseOneof {
	if m != nil {
		return m.ResponseOneof
	}
	return nil
}

func (x *StreamResponse) GetEchoResponse() *EchoResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_EchoResponse); ok {
		return x.EchoResponse
	}
	return nil
}

func (x *StreamResponse) GetGetResponse() *GetResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_GetResponse); ok {
		return x.GetResponse
	}
	return nil
}

func (x *StreamResponse) GetSetResponse() *SetResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_SetResponse); ok {
		return x.SetResponse
	}
	return nil
}

func (x *StreamResponse) GetRemoveResponse() *RemoveResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_RemoveResponse); ok {
		return x.RemoveResponse
	}
	return nil
}

func (x *StreamResponse) GetAppendResponse() *AppendResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_AppendResponse); ok {
		return x.AppendResponse
	}
	return nil
}

func (x *StreamResponse) GetCompareExchangeResponse() *CompareExchangeResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_CompareExchangeResponse); ok {
		return x.CompareExchangeResponse
	}
	return nil
}

func (x *StreamResponse) GetIncrementResponse() *IncrementResponse {
	if x, ok := x.GetResponseOneof().(*StreamResponse_IncrementResponse); ok {
		return x.IncrementResponse
	}
	return nil
}

type isStreamResponse_ResponseOneof interface {
	isStreamResponse_ResponseOneof()
}

type StreamResponse_EchoResponse struct {
	EchoResponse *EchoResponse `protobuf:"bytes,1,opt,name=echo_response,json=echoResponse,proto3,oneof"`
}

type StreamResponse_GetResponse struct {
	GetResponse *GetResponse `protobuf:"bytes,2,opt,name=get_response,json=getResponse,proto3,oneof"`
}

type StreamResponse_SetResponse struct {
	SetResponse *SetResponse `protobuf:"bytes,3,opt,name=set_response,json=setResponse,proto3,oneof"`
}

type StreamResponse_RemoveResponse struct {
	RemoveResponse *RemoveResponse `protobuf:"bytes,4,opt,name=remove_response,json=removeResponse,proto3,oneof"`
}

type StreamResponse_AppendResponse struct {
	AppendResponse *AppendResponse `protobuf:"bytes,5,opt,name=append_response,json=appendResponse,proto3,oneof"`
}

type StreamResponse_CompareExchangeResponse struct {
	CompareExchangeResponse *CompareExchangeResponse `protobuf:"bytes,6,opt,name=compare_exchange_response,json=compareExchangeResponse,proto3,oneof"`
}

type StreamResponse_IncrementResponse struct {
	IncrementResponse *IncrementResponse `protobuf:"bytes,7,opt,name=increment_response,json=incrementResponse,proto3,oneof"`
}

func (*StreamResponse_EchoResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_GetResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_SetResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_RemoveResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_AppendResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_CompareExchangeResponse) isStreamResponse_ResponseOneof() {}

func (*StreamResponse_IncrementResponse) isStreamResponse_ResponseOneof() {}

// Request of the Iterate method.
type IterateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,1,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The jump operation.
	Operation IterateRequest_OpType `protobuf:"varint,2,opt,name=operation,proto3,enum=tkrzw_rpc.IterateRequest_OpType" json:"operation,omitempty"`
	// The key of the operation.
	Key []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the operation.
	Value []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Whether the jump condition is inclusive.
	JumpInclusive bool `protobuf:"varint,5,opt,name=jump_inclusive,json=jumpInclusive,proto3" json:"jump_inclusive,omitempty"`
	// Whether to omit the key in the response.
	OmitKey bool `protobuf:"varint,6,opt,name=omit_key,json=omitKey,proto3" json:"omit_key,omitempty"`
	// Whether to omit the value in the response.
	OmitValue bool `protobuf:"varint,7,opt,name=omit_value,json=omitValue,proto3" json:"omit_value,omitempty"`
}

func (x *IterateRequest) Reset() {
	*x = IterateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterateRequest) ProtoMessage() {}

func (x *IterateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterateRequest.ProtoReflect.Descriptor instead.
func (*IterateRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *IterateRequest) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *IterateRequest) GetOperation() IterateRequest_OpType {
	if x != nil {
		return x.Operation
	}
	return IterateRequest_OP_NONE
}

func (x *IterateRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IterateRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *IterateRequest) GetJumpInclusive() bool {
	if x != nil {
		return x.JumpInclusive
	}
	return false
}

func (x *IterateRequest) GetOmitKey() bool {
	if x != nil {
		return x.OmitKey
	}
	return false
}

func (x *IterateRequest) GetOmitValue() bool {
	if x != nil {
		return x.OmitValue
	}
	return false
}

// Response of the Iterate method.
type IterateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The key of the record.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the record.
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IterateResponse) Reset() {
	*x = IterateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterateResponse) ProtoMessage() {}

func (x *IterateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterateResponse.ProtoReflect.Descriptor instead.
func (*IterateResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *IterateResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *IterateResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IterateResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request of the Replicate method.
type ReplicateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The minimum timestamp of update logs to retrieve.
	MinTimestamp int64 `protobuf:"varint,1,opt,name=min_timestamp,json=minTimestamp,proto3" json:"min_timestamp,omitempty"`
	// The server ID of the client.
	ServerId int32 `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// The time in seconds to wait for the next log.
	WaitTime float64 `protobuf:"fixed64,3,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
}

func (x *ReplicateRequest) Reset() {
	*x = ReplicateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateRequest) ProtoMessage() {}

func (x *ReplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateRequest.ProtoReflect.Descriptor instead.
func (*ReplicateRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *ReplicateRequest) GetMinTimestamp() int64 {
	if x != nil {
		return x.MinTimestamp
	}
	return 0
}

func (x *ReplicateRequest) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ReplicateRequest) GetWaitTime() float64 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

// Response of the Replicate method.
// The first response is OP_NOOP and provides the server ID of the server.
type ReplicateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The timestamp of the update.
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The server ID of the client.
	ServerId int32 `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// The index of the DBM object.  The origin is 0.
	DbmIndex int32 `protobuf:"varint,4,opt,name=dbm_index,json=dbmIndex,proto3" json:"dbm_index,omitempty"`
	// The operation type.
	OpType ReplicateResponse_OpType `protobuf:"varint,5,opt,name=op_type,json=opType,proto3,enum=tkrzw_rpc.ReplicateResponse_OpType" json:"op_type,omitempty"`
	// The record key.
	Key []byte `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	// The record value.
	Value []byte `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReplicateResponse) Reset() {
	*x = ReplicateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateResponse) ProtoMessage() {}

func (x *ReplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateResponse.ProtoReflect.Descriptor instead.
func (*ReplicateResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *ReplicateResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReplicateResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReplicateResponse) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ReplicateResponse) GetDbmIndex() int32 {
	if x != nil {
		return x.DbmIndex
	}
	return 0
}

func (x *ReplicateResponse) GetOpType() ReplicateResponse_OpType {
	if x != nil {
		return x.OpType
	}
	return ReplicateResponse_OP_NOOP
}

func (x *ReplicateResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ReplicateResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request of the ChangeMaster method.
type ChangeMasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the master of replication.
	Master string `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	// The skew of the timestamp.
	TimestampSkew int64 `protobuf:"varint,2,opt,name=timestamp_skew,json=timestampSkew,proto3" json:"timestamp_skew,omitempty"`
}

func (x *ChangeMasterRequest) Reset() {
	*x = ChangeMasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMasterRequest) ProtoMessage() {}

func (x *ChangeMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMasterRequest.ProtoReflect.Descriptor instead.
func (*ChangeMasterRequest) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{50}
}

func (x *ChangeMasterRequest) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

func (x *ChangeMasterRequest) GetTimestampSkew() int64 {
	if x != nil {
		return x.TimestampSkew
	}
	return 0
}

// Response of the ChangeMaster method.
type ChangeMasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result status.
	Status *StatusProto `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeMasterResponse) Reset() {
	*x = ChangeMasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkrzw_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMasterResponse) ProtoMessage() {}

func (x *ChangeMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkrzw_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMasterResponse.ProtoReflect.Descriptor instead.
func (*ChangeMasterResponse) Descriptor() ([]byte, []int) {
	return file_tkrzw_rpc_proto_rawDescGZIP(), []int{51}
}

func (x *ChangeMasterResponse) GetStatus() *StatusProto {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_tkrzw_rpc_proto protoreflect.FileDescriptor

var file_tkrzw_rpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x22, 0x3b, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x22, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x22,
	0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x63,
	0x68, 0x6f, 0x22, 0x2d, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x42, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x53, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62,
	0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x72, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x6f,
	0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22,
	0x3d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x3e, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x45, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6a, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x22, 0x40, 0x0a, 0x0e,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77,
	0x0a, 0x12, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x22, 0x45, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xef,
	0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62,
	0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x49, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x79, 0x0a, 0x10, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x55, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x5c, 0x0a, 0x0e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x41, 0x0a, 0x0f, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x35, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x42, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x74, 0x6f, 0x62, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63,
	0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x45,
	0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x76, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x5a, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x22, 0xa7, 0x04, 0x0a, 0x0d, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x65,
	0x63, 0x68, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x63,
	0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x63, 0x68,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x22, 0x99, 0x04, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x63, 0x68, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a,
	0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a,
	0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x19,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x12, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22,
	0xa1, 0x03, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x3e, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x6a, 0x75, 0x6d, 0x70, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6f, 0x6d, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6d, 0x69,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f,
	0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x4f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x50, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x4f, 0x50, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f,
	0x50, 0x5f, 0x4a, 0x55, 0x4d, 0x50, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x5f, 0x4a,
	0x55, 0x4d, 0x50, 0x5f, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4f,
	0x50, 0x5f, 0x4a, 0x55, 0x4d, 0x50, 0x5f, 0x55, 0x50, 0x50, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0b,
	0x0a, 0x07, 0x4f, 0x50, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4f,
	0x50, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x4f, 0x55, 0x53, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06,
	0x4f, 0x50, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x5f, 0x53,
	0x45, 0x54, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x10, 0x0a, 0x22, 0x69, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71,
	0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xc1, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x62, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x3c, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4f, 0x50, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x50, 0x5f, 0x43, 0x4c,
	0x45, 0x41, 0x52, 0x10, 0x03, 0x22, 0x54, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x73, 0x6b, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x6b, 0x65, 0x77, 0x22, 0x46, 0x0a, 0x14, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xb5, 0x0d, 0x0a, 0x0a, 0x44, 0x42, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x16, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12,
	0x1a, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x15, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1a, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x2e,
	0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x12, 0x1d, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1d,
	0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x21, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x67, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x26, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x17, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x07, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a,
	0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x6b, 0x72, 0x7a,
	0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x18, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74,
	0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x18, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x6b,
	0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x07, 0x49, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x48, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e,
	0x74, 0x6b, 0x72, 0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x6b, 0x72,
	0x7a, 0x77, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x65, 0x72, 0x2f, 0x74, 0x6b, 0x72, 0x7a, 0x77, 0x2d, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tkrzw_rpc_proto_rawDescOnce sync.Once
	file_tkrzw_rpc_proto_rawDescData = file_tkrzw_rpc_proto_rawDesc
)

func file_tkrzw_rpc_proto_rawDescGZIP() []byte {
	file_tkrzw_rpc_proto_rawDescOnce.Do(func() {
		file_tkrzw_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_tkrzw_rpc_proto_rawDescData)
	})
	return file_tkrzw_rpc_proto_rawDescData
}

var file_tkrzw_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tkrzw_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_tkrzw_rpc_proto_goTypes = []interface{}{
	(IterateRequest_OpType)(0),           // 0: tkrzw_rpc.IterateRequest.OpType
	(ReplicateResponse_OpType)(0),        // 1: tkrzw_rpc.ReplicateResponse.OpType
	(*StatusProto)(nil),                  // 2: tkrzw_rpc.StatusProto
	(*StringPair)(nil),                   // 3: tkrzw_rpc.StringPair
	(*BytesPair)(nil),                    // 4: tkrzw_rpc.BytesPair
	(*RecordState)(nil),                  // 5: tkrzw_rpc.RecordState
	(*EchoRequest)(nil),                  // 6: tkrzw_rpc.EchoRequest
	(*EchoResponse)(nil),                 // 7: tkrzw_rpc.EchoResponse
	(*InspectRequest)(nil),               // 8: tkrzw_rpc.InspectRequest
	(*InspectResponse)(nil),              // 9: tkrzw_rpc.InspectResponse
	(*GetRequest)(nil),                   // 10: tkrzw_rpc.GetRequest
	(*GetResponse)(nil),                  // 11: tkrzw_rpc.GetResponse
	(*GetMultiRequest)(nil),              // 12: tkrzw_rpc.GetMultiRequest
	(*GetMultiResponse)(nil),             // 13: tkrzw_rpc.GetMultiResponse
	(*SetRequest)(nil),                   // 14: tkrzw_rpc.SetRequest
	(*SetResponse)(nil),                  // 15: tkrzw_rpc.SetResponse
	(*SetMultiRequest)(nil),              // 16: tkrzw_rpc.SetMultiRequest
	(*SetMultiResponse)(nil),             // 17: tkrzw_rpc.SetMultiResponse
	(*RemoveRequest)(nil),                // 18: tkrzw_rpc.RemoveRequest
	(*RemoveResponse)(nil),               // 19: tkrzw_rpc.RemoveResponse
	(*RemoveMultiRequest)(nil),           // 20: tkrzw_rpc.RemoveMultiRequest
	(*RemoveMultiResponse)(nil),          // 21: tkrzw_rpc.RemoveMultiResponse
	(*AppendRequest)(nil),                // 22: tkrzw_rpc.AppendRequest
	(*AppendResponse)(nil),               // 23: tkrzw_rpc.AppendResponse
	(*AppendMultiRequest)(nil),           // 24: tkrzw_rpc.AppendMultiRequest
	(*AppendMultiResponse)(nil),          // 25: tkrzw_rpc.AppendMultiResponse
	(*CompareExchangeRequest)(nil),       // 26: tkrzw_rpc.CompareExchangeRequest
	(*CompareExchangeResponse)(nil),      // 27: tkrzw_rpc.CompareExchangeResponse
	(*IncrementRequest)(nil),             // 28: tkrzw_rpc.IncrementRequest
	(*IncrementResponse)(nil),            // 29: tkrzw_rpc.IncrementResponse
	(*CompareExchangeMultiRequest)(nil),  // 30: tkrzw_rpc.CompareExchangeMultiRequest
	(*CompareExchangeMultiResponse)(nil), // 31: tkrzw_rpc.CompareExchangeMultiResponse
	(*CountRequest)(nil),                 // 32: tkrzw_rpc.CountRequest
	(*CountResponse)(nil),                // 33: tkrzw_rpc.CountResponse
	(*GetFileSizeRequest)(nil),           // 34: tkrzw_rpc.GetFileSizeRequest
	(*GetFileSizeResponse)(nil),          // 35: tkrzw_rpc.GetFileSizeResponse
	(*ClearRequest)(nil),                 // 36: tkrzw_rpc.ClearRequest
	(*ClearResponse)(nil),                // 37: tkrzw_rpc.ClearResponse
	(*RebuildRequest)(nil),               // 38: tkrzw_rpc.RebuildRequest
	(*RebuildResponse)(nil),              // 39: tkrzw_rpc.RebuildResponse
	(*ShouldBeRebuiltRequest)(nil),       // 40: tkrzw_rpc.ShouldBeRebuiltRequest
	(*ShouldBeRebuiltResponse)(nil),      // 41: tkrzw_rpc.ShouldBeRebuiltResponse
	(*SynchronizeRequest)(nil),           // 42: tkrzw_rpc.SynchronizeRequest
	(*SynchronizeResponse)(nil),          // 43: tkrzw_rpc.SynchronizeResponse
	(*SearchRequest)(nil),                // 44: tkrzw_rpc.SearchRequest
	(*SearchResponse)(nil),               // 45: tkrzw_rpc.SearchResponse
	(*StreamRequest)(nil),                // 46: tkrzw_rpc.StreamRequest
	(*StreamResponse)(nil),               // 47: tkrzw_rpc.StreamResponse
	(*IterateRequest)(nil),               // 48: tkrzw_rpc.IterateRequest
	(*IterateResponse)(nil),              // 49: tkrzw_rpc.IterateResponse
	(*ReplicateRequest)(nil),             // 50: tkrzw_rpc.ReplicateRequest
	(*ReplicateResponse)(nil),            // 51: tkrzw_rpc.ReplicateResponse
	(*ChangeMasterRequest)(nil),          // 52: tkrzw_rpc.ChangeMasterRequest
	(*ChangeMasterResponse)(nil),         // 53: tkrzw_rpc.ChangeMasterResponse
}
var file_tkrzw_rpc_proto_depIdxs = []int32{
	3,  // 0: tkrzw_rpc.InspectResponse.records:type_name -> tkrzw_rpc.StringPair
	2,  // 1: tkrzw_rpc.GetResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 2: tkrzw_rpc.GetMultiResponse.status:type_name -> tkrzw_rpc.StatusProto
	4,  // 3: tkrzw_rpc.GetMultiResponse.records:type_name -> tkrzw_rpc.BytesPair
	2,  // 4: tkrzw_rpc.SetResponse.status:type_name -> tkrzw_rpc.StatusProto
	4,  // 5: tkrzw_rpc.SetMultiRequest.records:type_name -> tkrzw_rpc.BytesPair
	2,  // 6: tkrzw_rpc.SetMultiResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 7: tkrzw_rpc.RemoveResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 8: tkrzw_rpc.RemoveMultiResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 9: tkrzw_rpc.AppendResponse.status:type_name -> tkrzw_rpc.StatusProto
	4,  // 10: tkrzw_rpc.AppendMultiRequest.records:type_name -> tkrzw_rpc.BytesPair
	2,  // 11: tkrzw_rpc.AppendMultiResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 12: tkrzw_rpc.CompareExchangeResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 13: tkrzw_rpc.IncrementResponse.status:type_name -> tkrzw_rpc.StatusProto
	5,  // 14: tkrzw_rpc.CompareExchangeMultiRequest.expected:type_name -> tkrzw_rpc.RecordState
	5,  // 15: tkrzw_rpc.CompareExchangeMultiRequest.desired:type_name -> tkrzw_rpc.RecordState
	2,  // 16: tkrzw_rpc.CompareExchangeMultiResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 17: tkrzw_rpc.CountResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 18: tkrzw_rpc.GetFileSizeResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 19: tkrzw_rpc.ClearResponse.status:type_name -> tkrzw_rpc.StatusProto
	3,  // 20: tkrzw_rpc.RebuildRequest.params:type_name -> tkrzw_rpc.StringPair
	2,  // 21: tkrzw_rpc.RebuildResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 22: tkrzw_rpc.ShouldBeRebuiltResponse.status:type_name -> tkrzw_rpc.StatusProto
	3,  // 23: tkrzw_rpc.SynchronizeRequest.params:type_name -> tkrzw_rpc.StringPair
	2,  // 24: tkrzw_rpc.SynchronizeResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 25: tkrzw_rpc.SearchResponse.status:type_name -> tkrzw_rpc.StatusProto
	6,  // 26: tkrzw_rpc.StreamRequest.echo_request:type_name -> tkrzw_rpc.EchoRequest
	10, // 27: tkrzw_rpc.StreamRequest.get_request:type_name -> tkrzw_rpc.GetRequest
	14, // 28: tkrzw_rpc.StreamRequest.set_request:type_name -> tkrzw_rpc.SetRequest
	18, // 29: tkrzw_rpc.StreamRequest.remove_request:type_name -> tkrzw_rpc.RemoveRequest
	22, // 30: tkrzw_rpc.StreamRequest.append_request:type_name -> tkrzw_rpc.AppendRequest
	26, // 31: tkrzw_rpc.StreamRequest.compare_exchange_request:type_name -> tkrzw_rpc.CompareExchangeRequest
	28, // 32: tkrzw_rpc.StreamRequest.increment_request:type_name -> tkrzw_rpc.IncrementRequest
	7,  // 33: tkrzw_rpc.StreamResponse.echo_response:type_name -> tkrzw_rpc.EchoResponse
	11, // 34: tkrzw_rpc.StreamResponse.get_response:type_name -> tkrzw_rpc.GetResponse
	15, // 35: tkrzw_rpc.StreamResponse.set_response:type_name -> tkrzw_rpc.SetResponse
	19, // 36: tkrzw_rpc.StreamResponse.remove_response:type_name -> tkrzw_rpc.RemoveResponse
	23, // 37: tkrzw_rpc.StreamResponse.append_response:type_name -> tkrzw_rpc.AppendResponse
	27, // 38: tkrzw_rpc.StreamResponse.compare_exchange_response:type_name -> tkrzw_rpc.CompareExchangeResponse
	29, // 39: tkrzw_rpc.StreamResponse.increment_response:type_name -> tkrzw_rpc.IncrementResponse
	0,  // 40: tkrzw_rpc.IterateRequest.operation:type_name -> tkrzw_rpc.IterateRequest.OpType
	2,  // 41: tkrzw_rpc.IterateResponse.status:type_name -> tkrzw_rpc.StatusProto
	2,  // 42: tkrzw_rpc.ReplicateResponse.status:type_name -> tkrzw_rpc.StatusProto
	1,  // 43: tkrzw_rpc.ReplicateResponse.op_type:type_name -> tkrzw_rpc.ReplicateResponse.OpType
	2,  // 44: tkrzw_rpc.ChangeMasterResponse.status:type_name -> tkrzw_rpc.StatusProto
	6,  // 45: tkrzw_rpc.DBMService.Echo:input_type -> tkrzw_rpc.EchoRequest
	8,  // 46: tkrzw_rpc.DBMService.Inspect:input_type -> tkrzw_rpc.InspectRequest
	10, // 47: tkrzw_rpc.DBMService.Get:input_type -> tkrzw_rpc.GetRequest
	12, // 48: tkrzw_rpc.DBMService.GetMulti:input_type -> tkrzw_rpc.GetMultiRequest
	14, // 49: tkrzw_rpc.DBMService.Set:input_type -> tkrzw_rpc.SetRequest
	16, // 50: tkrzw_rpc.DBMService.SetMulti:input_type -> tkrzw_rpc.SetMultiRequest
	18, // 51: tkrzw_rpc.DBMService.Remove:input_type -> tkrzw_rpc.RemoveRequest
	20, // 52: tkrzw_rpc.DBMService.RemoveMulti:input_type -> tkrzw_rpc.RemoveMultiRequest
	22, // 53: tkrzw_rpc.DBMService.Append:input_type -> tkrzw_rpc.AppendRequest
	24, // 54: tkrzw_rpc.DBMService.AppendMulti:input_type -> tkrzw_rpc.AppendMultiRequest
	26, // 55: tkrzw_rpc.DBMService.CompareExchange:input_type -> tkrzw_rpc.CompareExchangeRequest
	28, // 56: tkrzw_rpc.DBMService.Increment:input_type -> tkrzw_rpc.IncrementRequest
	30, // 57: tkrzw_rpc.DBMService.CompareExchangeMulti:input_type -> tkrzw_rpc.CompareExchangeMultiRequest
	32, // 58: tkrzw_rpc.DBMService.Count:input_type -> tkrzw_rpc.CountRequest
	34, // 59: tkrzw_rpc.DBMService.GetFileSize:input_type -> tkrzw_rpc.GetFileSizeRequest
	36, // 60: tkrzw_rpc.DBMService.Clear:input_type -> tkrzw_rpc.ClearRequest
	38, // 61: tkrzw_rpc.DBMService.Rebuild:input_type -> tkrzw_rpc.RebuildRequest
	40, // 62: tkrzw_rpc.DBMService.ShouldBeRebuilt:input_type -> tkrzw_rpc.ShouldBeRebuiltRequest
	42, // 63: tkrzw_rpc.DBMService.Synchronize:input_type -> tkrzw_rpc.SynchronizeRequest
	44, // 64: tkrzw_rpc.DBMService.Search:input_type -> tkrzw_rpc.SearchRequest
	46, // 65: tkrzw_rpc.DBMService.Stream:input_type -> tkrzw_rpc.StreamRequest
	48, // 66: tkrzw_rpc.DBMService.Iterate:input_type -> tkrzw_rpc.IterateRequest
	50, // 67: tkrzw_rpc.DBMService.Replicate:input_type -> tkrzw_rpc.ReplicateRequest
	52, // 68: tkrzw_rpc.DBMService.ChangeMaster:input_type -> tkrzw_rpc.ChangeMasterRequest
	7,  // 69: tkrzw_rpc.DBMService.Echo:output_type -> tkrzw_rpc.EchoResponse
	9,  // 70: tkrzw_rpc.DBMService.Inspect:output_type -> tkrzw_rpc.InspectResponse
	11, // 71: tkrzw_rpc.DBMService.Get:output_type -> tkrzw_rpc.GetResponse
	13, // 72: tkrzw_rpc.DBMService.GetMulti:output_type -> tkrzw_rpc.GetMultiResponse
	15, // 73: tkrzw_rpc.DBMService.Set:output_type -> tkrzw_rpc.SetResponse
	17, // 74: tkrzw_rpc.DBMService.SetMulti:output_type -> tkrzw_rpc.SetMultiResponse
	19, // 75: tkrzw_rpc.DBMService.Remove:output_type -> tkrzw_rpc.RemoveResponse
	21, // 76: tkrzw_rpc.DBMService.RemoveMulti:output_type -> tkrzw_rpc.RemoveMultiResponse
	23, // 77: tkrzw_rpc.DBMService.Append:output_type -> tkrzw_rpc.AppendResponse
	25, // 78: tkrzw_rpc.DBMService.AppendMulti:output_type -> tkrzw_rpc.AppendMultiResponse
	27, // 79: tkrzw_rpc.DBMService.CompareExchange:output_type -> tkrzw_rpc.CompareExchangeResponse
	29, // 80: tkrzw_rpc.DBMService.Increment:output_type -> tkrzw_rpc.IncrementResponse
	31, // 81: tkrzw_rpc.DBMService.CompareExchangeMulti:output_type -> tkrzw_rpc.CompareExchangeMultiResponse
	33, // 82: tkrzw_rpc.DBMService.Count:output_type -> tkrzw_rpc.CountResponse
	35, // 83: tkrzw_rpc.DBMService.GetFileSize:output_type -> tkrzw_rpc.GetFileSizeResponse
	37, // 84: tkrzw_rpc.DBMService.Clear:output_type -> tkrzw_rpc.ClearResponse
	39, // 85: tkrzw_rpc.DBMService.Rebuild:output_type -> tkrzw_rpc.RebuildResponse
	41, // 86: tkrzw_rpc.DBMService.ShouldBeRebuilt:output_type -> tkrzw_rpc.ShouldBeRebuiltResponse
	43, // 87: tkrzw_rpc.DBMService.Synchronize:output_type -> tkrzw_rpc.SynchronizeResponse
	45, // 88: tkrzw_rpc.DBMService.Search:output_type -> tkrzw_rpc.SearchResponse
	47, // 89: tkrzw_rpc.DBMService.Stream:output_type -> tkrzw_rpc.StreamResponse
	49, // 90: tkrzw_rpc.DBMService.Iterate:output_type -> tkrzw_rpc.IterateResponse
	51, // 91: tkrzw_rpc.DBMService.Replicate:output_type -> tkrzw_rpc.ReplicateResponse
	53, // 92: tkrzw_rpc.DBMService.ChangeMaster:output_type -> tkrzw_rpc.ChangeMasterResponse
	69, // [69:93] is the sub-list for method output_type
	45, // [45:69] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_tkrzw_rpc_proto_init() }
func file_tkrzw_rpc_proto_init() {
	if File_tkrzw_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tkrzw_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareExchangeMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareExchangeMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShouldBeRebuiltRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShouldBeRebuiltResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkrzw_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tkrzw_rpc_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*StreamRequest_EchoRequest)(nil),
		(*StreamRequest_GetRequest)(nil),
		(*StreamRequest_SetRequest)(nil),
		(*StreamRequest_RemoveRequest)(nil),
		(*StreamRequest_AppendRequest)(nil),
		(*StreamRequest_CompareExchangeRequest)(nil),
		(*StreamRequest_IncrementRequest)(nil),
	}
	file_tkrzw_rpc_proto_msgTypes[45].OneofWrappers = []interface{}{
		(*StreamResponse_EchoResponse)(nil),
		(*StreamResponse_GetResponse)(nil),
		(*StreamResponse_SetResponse)(nil),
		(*StreamResponse_RemoveResponse)(nil),
		(*StreamResponse_AppendResponse)(nil),
		(*StreamResponse_CompareExchangeResponse)(nil),
		(*StreamResponse_IncrementResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tkrzw_rpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkrzw_rpc_proto_goTypes,
		DependencyIndexes: file_tkrzw_rpc_proto_depIdxs,
		EnumInfos:         file_tkrzw_rpc_proto_enumTypes,
		MessageInfos:      file_tkrzw_rpc_proto_msgTypes,
	}.Build()
	File_tkrzw_rpc_proto = out.File
	file_tkrzw_rpc_proto_rawDesc = nil
	file_tkrzw_rpc_proto_goTypes = nil
	file_tkrzw_rpc_proto_depIdxs = nil
}
